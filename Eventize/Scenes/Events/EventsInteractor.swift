//
//  EventsInteractor.swift
//  Eventize
//
//  Created by JP Giarrante on 09/09/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EventsBusinessLogic {
    func fetchEvents(request: Events.EventList.Request)
    func selectEvent(at index: Int)
}

protocol EventsDataStore {
    var events: [Events.EventObject] { get set }
    var selectedEvent: Events.EventObject? { get set }
}

class EventsInteractor: EventsBusinessLogic, EventsDataStore {
    var presenter: EventsPresentationLogic?
    var worker: EventsWorker?
    
    var selectedEvent: Events.EventObject?
    var events: [Events.EventObject] = []

    // MARK: Do something (and send response to EventsPresenter)

    func fetchEvents(request: Events.EventList.Request) {
        worker = EventsWorker()
        worker?.doSomeWork()

        var events = [Events.EventObject]()
        for index in 0...20 {
            events.append(.init(content: .init(image: UIImage(named: "events_banner_\(index)"),
                                               title: "Evento da FIAP",
                                               address: "Rua Maria Eunice de Souza Filha, 49 - Bloco B",
                                               price: 19.90,
                                               extraInfo: "Lote 1",
                                               labels: [.init(image: nil,
                                                              text: "Ivete Sem Galo"),
                                                        .init(image: nil,
                                                                       text: "Luiza Sonsa"),
                                                        .init(image: nil,
                                                                       text: "+18"),
                                                        .init(image: nil,
                                                                       text: "+18")])))
        }
        self.events = events
        let response = Events.EventList.Response(events: events)
        presenter?.presentEvents(response: response)
    }
    
    func selectEvent(at index: Int) {
        selectedEvent = events[safe: index]
    }
}
