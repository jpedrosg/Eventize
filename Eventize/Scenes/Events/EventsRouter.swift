//
//  EventsRouter.swift
//  Eventize
//
//  Created by JP Giarrante on 09/09/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol EventsRoutingLogic {
    func previewEvent() -> EventViewController
    func routeToEvent()
    func routeToEvent(_ destinationVC: EventViewController?)
    func routeToTickets()
}

protocol EventsDataPassing {
    var dataStore: EventsDataStore? { get }
}

final class EventsRouter: NSObject, EventsRoutingLogic, EventsDataPassing {
    weak var viewController: EventsViewController?
    var dataStore: EventsDataStore?

    // MARK: Routing (navigating to other screens)
    
    func previewEvent() -> EventViewController {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let destinationVC = storyboard.instantiateViewController(withIdentifier: "EventViewController") as! EventViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToEvent(source: dataStore!, destination: &destinationDS)
        return destinationVC
    }
    
    func routeToEvent() {
        routeToEvent(nil)
    }

    func routeToEvent(_ destinationVC: EventViewController?) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let destinationVC = destinationVC ?? storyboard.instantiateViewController(withIdentifier: "EventViewController") as! EventViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToEvent(source: dataStore!, destination: &destinationDS)
        navigateToEvent(source: viewController!, destination: destinationVC)
    }
        
    func routeToTickets() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let destinationVC = storyboard.instantiateViewController(withIdentifier: "TicketsViewController") as! TicketsViewController
        navigateToTickets(source: viewController!, destination: destinationVC)
    }

    // MARK: Navigation to other screen

    func navigateToEvent(source: EventsViewController, destination: EventViewController) {
        source.show(destination, sender: nil)
    }
    
    func navigateToTickets(source: EventsViewController, destination: TicketsViewController) {
        source.show(destination, sender: nil)
    }

    // MARK: Passing data to other screen

    func passDataToEvent(source: EventsDataStore, destination: inout EventDataStore) {
        destination.event = source.selectedEvent
    }
}
