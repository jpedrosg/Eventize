//
//  RegisterInteractor.swift
//  Eventize
//
//  Created by JP Giarrante on 09/09/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterBusinessLogic {
    func doSomething(request: Register.Something.Request)
//    func doSomethingElse(request: Register.SomethingElse.Request)
}

protocol RegisterDataStore {
    //var name: String { get set }
}

final class RegisterInteractor: RegisterBusinessLogic, RegisterDataStore {
    var presenter: RegisterPresentationLogic?
    var worker: RegisterWorker?
    //var name: String = ""

    // MARK: Do something (and send response to RegisterPresenter)

    func doSomething(request: Register.Something.Request) {
        worker = RegisterWorker()
        worker?.doSomeWork()

        let response = Register.Something.Response()
        presenter?.presentSomething(response: response)
    }
//
//    func doSomethingElse(request: Register.SomethingElse.Request) {
//        worker = RegisterWorker()
//        worker?.doSomeOtherWork()
//
//        let response = Register.SomethingElse.Response()
//        presenter?.presentSomethingElse(response: response)
//    }
}
